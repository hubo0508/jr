<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-autowire="byName">

	<context:annotation-config />
	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="180" />
		<property name="maxWait" value="10000" />
		<property name="defaultAutoCommit" value="false" />
	</bean>
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<bean id="txManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    
    <bean id="fileDir" class="java.lang.String">
		<constructor-arg type="java.lang.String" value="${file.dir}" />
	</bean>
	<bean id="jrdir" class="java.lang.String">
		<constructor-arg type="java.lang.String" value="${file.jrdir}" />
	</bean>
	
	<bean id="cloudflv" class="java.lang.String">
		<constructor-arg type="java.lang.String" value="${cloud.flv}" />
	</bean>
	<bean id="cloudattachment" class="java.lang.String">
		<constructor-arg type="java.lang.String" value="${cloud.attachment}" />
	</bean>
	<bean id="cloudview" class="java.lang.String">
		<constructor-arg type="java.lang.String" value="${cloudview}" />
	</bean>
	
	<!-- 邮件SMTP主机 -->
	<bean id="mailSmtp" class="java.lang.String">
		<constructor-arg type="java.lang.String" value="${MAIL_SMTP}" />
	</bean>
	<!-- 邮件地址 -->
	<bean id="mailAddress" class="java.lang.String">
		<constructor-arg type="java.lang.String" value="${MAIL_ADDRESS}" />
	</bean>
	<!-- 邮件账户 -->
	<bean id="mailAccount" class="java.lang.String">
		<constructor-arg type="java.lang.String" value="${MAIL_ACCOUNT}" />
	</bean>
	<!-- 邮件密码 -->
	<bean id="mailPassword" class="java.lang.String">
		<constructor-arg type="java.lang.String" value="${MAIL_PASSWORD}" />
	</bean>
      
    <tx:annotation-driven transaction-manager="txManager" />  
	
	<context:component-scan base-package="com.jr" />

	 <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">red</prop>
						<prop key="kaptcha.image.width">250</prop>
						<prop key="kaptcha.textproducer.font.size">80</prop>
						<prop key="kaptcha.image.height">90</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.char.space">11</prop>
						<!-- <prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop> -->
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
</beans>